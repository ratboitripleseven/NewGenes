-*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*-
Selected mode: 
	train
Configuration file: 
	configuration/check_padding_2.yaml
	Dataset loaded: 
		sequential 
	Data type selected: 
		D 
	Partition file: 
		HGTDB_cross_fold_partition_0.csv 
	Model type: 
		binary_classifier
	algorithm type: 
		d
	algorithm chosen: 
		LSTM_v7
-*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*-
LSTMHGTTagger_v7(
  (lstm): LSTM(4, 10, batch_first=True)
  (act_func_last): ReLU()
  (hidden2tag): Linear(in_features=10, out_features=2, bias=True)
)
         SD1  SD2  SD3  SDT  HGT
ID                              
SCO3176  NaN  NaN  NaN  NaN    0
{'loss': 'CE', 'optimizer': 'Adam', 'learning_rate': 0.001}
INTIALIZING DL SEQUENTIAL
Saving in models/binary_classifier/
Batch size: 3
training epoch:1
acculumative loss: 0.6924487418598599
acculumative vl loss: 0.6923653721809387
5
BEFORe
torch.return_types.max(
values=tensor([[0.0291, 0.1252, 0.1624,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]]),
indices=tensor([[1, 1, 1,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]]))
AFTER
tensor([[[0.0000, 0.0291],
         [0.0000, 0.1252],
         [0.0000, 0.1624],
         ...,
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000]],

        [[0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         ...,
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000]],

        [[0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         ...,
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000]]])
BEFORe
torch.return_types.max(
values=tensor([[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0500, 0.0000]]),
indices=tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 1, 0]]))
AFTER
tensor([[[0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         ...,
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000]],

        [[0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         ...,
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000]],

        [[0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         ...,
         [0.0000, 0.0000],
         [0.0000, 0.0500],
         [0.0000, 0.0000]]])
BEFORe
torch.return_types.max(
values=tensor([[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0951, 0.1280,  ..., 0.0000, 0.0000, 0.0000]]),
indices=tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 1, 1,  ..., 0, 0, 0]]))
AFTER
tensor([[[0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         ...,
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000]],

        [[0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         ...,
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000]],

        [[0.0000, 0.0000],
         [0.0000, 0.0951],
         [0.0000, 0.1280],
         ...,
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000]]])
BEFORe
torch.return_types.max(
values=tensor([[0.0000, 0.0000, 0.0693,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]]),
indices=tensor([[0, 0, 1,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]]))
AFTER
tensor([[[0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0693],
         ...,
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000]],

        [[0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         ...,
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000]],

        [[0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         ...,
         [0.0000, 0.0000],
         [0.0000, 0.0000],
         [0.0000, 0.0000]]])
BEFORe
torch.return_types.max(
values=tensor([[0., 0., 0.,  ..., 0., 0., 0.]]),
indices=tensor([[0, 0, 0,  ..., 0, 0, 0]]))
AFTER
tensor([[[0., 0.],
         [0., 0.],
         [0., 0.],
         ...,
         [0., 0.],
         [0., 0.],
         [0., 0.]]])
************************************************************
Test genome no 0 of length: 1036 
